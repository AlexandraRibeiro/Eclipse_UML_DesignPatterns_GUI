package avaj_launcher;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Random;

public class GenerateMD5 {
	
	ArrayList<String> allLines = new ArrayList<String>();
	private String filenameWithOutExt;
	private ArrayList<String> arrMD5 = new ArrayList<String>();
	private Crypted crypted;
	
	GenerateMD5 (ArrayList<String> allLines, String filenameWithExt) throws IOException, NoSuchAlgorithmException {
		buffer = buff;
		filenameWithOutExt = filenameWithExt.replaceFirst("[.][^.]+$", "");
		crypted = new Crypted();
		generator();
	}
	
	private void generator() throws IOException, NoSuchAlgorithmException {
		addMD5Sentence();
		addMD5Buffer();
		
		Path sim = Paths.get(filenameWithOutExt + "_MD5.txt");
		Files.write(sim, arrMD5);
	}
	
	public void addMD5Sentence() throws NoSuchAlgorithmException {
		String[] MD5Sentences = Tools.getMD5Sentences();
		int index = new Random().nextInt(MD5Sentences.length);
	
		//debug
		System.out.println("MD5Sentence verif random : " + MD5Sentences[index]);
		
		arrMD5.add(crypted.cryptedStr(MD5Sentences[index]));
	}
	
	private void addMD5Buffer() {
		int i = 0;
		String sCurrentLine;
		
		while ((sCurrentLine = buff.readLine()) != null) {
			if (i == 0) {
				arrMD5.add(crypted.cryptedStr(sCurrenLine)); //add cycle
				i++;
			}
			
			
		}
	}
	
}
