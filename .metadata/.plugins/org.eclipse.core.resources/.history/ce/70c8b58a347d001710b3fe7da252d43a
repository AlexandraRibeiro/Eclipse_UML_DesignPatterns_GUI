package avaj_launcher;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Random;

public class GenerateMD5 {
	
	ArrayList<String> allLines = new ArrayList<String>();
	private String filenameWithOutExt;
	private ArrayList<String> arrMD5 = new ArrayList<String>();
	private Crypted crypted;
	
	GenerateMD5 (ArrayList<String> arrAllLines, String filenameWithExt) throws IOException, NoSuchAlgorithmException {
		allLines = arrAllLines;
		filenameWithOutExt = filenameWithExt.replaceFirst("[.][^.]+$", "");
		crypted = new Crypted();
		generator();
	}
	
	private void generator() throws IOException, NoSuchAlgorithmException {
		addMD5Sentence();
		addMD5Buffer();
		
		Path sim = Paths.get(filenameWithOutExt + "_MD5.txt");
		Files.write(sim, arrMD5);
	}
	
	public void addMD5Sentence() throws NoSuchAlgorithmException {
		String[] MD5Sentences = Tools.getMD5Sentences();
		int index = new Random().nextInt(MD5Sentences.length);
	
		//debug ///////////////////////////////////////////////////////////////
		System.out.println("MD5Sentence verif random : " + MD5Sentences[index]);
		///////////////////////////////////////////////////////////////////////
		
		arrMD5.add(crypted.cryptedStr(MD5Sentences[index]));
	}
	
	private void addMD5Buffer() throws NoSuchAlgorithmException {
		int i = 0;
		int j = 0;
		String[] sArrayLine;
		
		while (i < allLines.size()) {
			if (i == 0) {
				arrMD5.add(crypted.cryptedStr(allLines.get(i))); //add cycle
				i++;
			}
			sArrayLine = allLines.get(i).split(" ");
			arrMD5.add(crypted.cryptedStr(sArrayLine[j] + ' ' + sArrayLine[j].charAt(0)));	// add ex: 'Baloon B'
			arrMD5.add(crypted.cryptedStr(sArrayLine[++j].substring(0))); //add number in name
			
			//debug ///////////////////////////////////////
			System.out.println(sArrayLine[j].substring(0));
			///////////////////////////////////////////////
			
			while (++j < 5) {
				arrMD5.add(crypted.cryptedStr(sArrayLine[j])); //add longitude, latitude, height
			}
			i++;
		}
	}
	
}
